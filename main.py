###################
#Απαραίτητα imports
###################
import pickle
import os

###################
#Global μεταβλητές
###################
#Δημιουργία λεξικού το οποίο ως key έχει τα κράτη
#και ως value τις πρωτεύουσες
eu ={"Αυστρία" : "Βιέννη",
	"Βέλγιο" : "Βρυξέλλες",
	"Βουλγαρία" : "Σόφια",
	"Κροατία" : "Ζάγκρεμπ",
	"Κύπρος" : "Λευκωσία",
	"Τσεχία" : "Πράγα",
	"Δανία" : "Κοπεγχάγη",
	"Εσθονία" : "Τάλιν",
	"Φινλανδία" : "Ελσίνκι",
	"Γαλλία" : "Παρίσι",
	"Γερμανία" : "Βερολίνο",
	"Ελλάδα" : "Αθήνα",
	"Ουγγαρία" : "Βουδαπέστη",
	"Ιρλανδία" : "Δουβλίνο",
	"Ιταλία" : "Ρώμη",
	"Λετονία" : "Ρίγα",
	"Λιθουανία" : "Βίλνιους",
	"Λουξεμβούργο" : "Λουξεμβούργο",
	"Μάλτα" : "Βαλέτα",
	"Ολλανδία" : "Άμστερνταμ",
	"Πολωνία" : "Βαρσοβία",
	"Πορτογαλία" : "Λισαβόνα",
	"Ρουμανία" : "Βουκουρέστι",
	"Σλοβακία" : "Μπρατισλάβα",
	"Σλοβενία" : "Λιουμπλιάνα",
	"Ισπανία" : "Μαδρίτη",
	"Σουηδία" : "Στοκχόλμη"}
	
#Δημιουργία αντιγράφου του λεξικού, το οποίο θα περιέχει
#όλα τα στοιχεία, ασχέτως της προόδου του χρήστη
#Προσοχή! το eu_all = eu δεν είναι αρκετό!
eu_all = eu.copy()

#############
#Συναρτήσεις
#############

#Η συνάρτηση τυπώνει το αρχικό εισαγωγικό μήνυμα
def intro():
	#Ενημερωτικό print προς τον χρήστη
	print ("Μάντεψε τα κράτη της ΕΕ και τις πρωτεύουσές τους!")

#Η συνάρτηση εμφανίζει το βασικό menu και επιστρέφει την επιλογή του χρήστη
def menu():
	print ("\nΕπιλογές - Πληκτρολόγησε:")
	print ("- Ένα κράτος της ΕΕ για να ξεκινήσεις να παίζεις")
	print ("- 1 για να δεις πόσες χώρες έχεις βρει μέχρι τώρα")
	print ("- 2 για αποθήκευση της προόδου σου και έξοδο, ώστε να συνεχίσεις αργότερα")
	print ("- 3 για έξοδο και προβολή όλων των απαντήσεων")
	kratos = input ("Δώσε την επιλογή σου: ")
			
	#Σε περίπτωση που ο χρήστης ζητήσει να δει την πρόοδο του
	if kratos == "1":
		return 1
	
	#Σε περίπτωση που ο χρήστης ζητήσει αποθήκευση της προόδου και έξοδο
	elif kratos == "2":
		return 2
		
	#Σε περίπτωση που ο χρήστης ζητήσει έξοδο
	elif kratos == "3":
		return 3
	
	else:
		return kratos

#Η συνάρτηση δέχεται ως όρισμα μια συμβολοσειρά και
#επαληθεύει αν πρόκειται για σωστό κράτος
#Αν ναι, ζητάει και την πρωτεύουσα από τον χρήστη ενώ
#παράλληλα καλεί και τη συνάρτηση για την εκτύπωση των πόλεων
def check_answer(kratos):
	#Έλεχγος για το αν το κράτος υπάρχει
	if kratos in eu:
		#Αν το κράτος υπάρχει, ζητάμε την πρωτεύουσα
		proteuousa = input ("Πληκτρολόγησε την πρωτεύουσά του: ")
		
		#Ελεγχος για το αν μαντέψαμε σωστά και την πρωτευουσά
		if eu[kratos] == proteuousa:
			#Διαγραφή του κράτους από το λεξικό
			eu.pop(kratos)
			#Εμφάνιση 3 πόλεων από το κράτος που βρήκε επιτυχώς ο χρήστης
			load_cities_csv(kratos,3)
			print ("Μάντεψες σωστά! Κράτη που απομένουν να βρεις:",len(eu))
		else:
			print("Μάντεψες σωστά το κράτος αλλά όχι και την πρωτεύουσά του")
			print("Δοκίμασε ξανά!\n")
	else:
		if kratos in eu_all:
			print ("Το κράτος που έδωσες είναι σωστό αλλά το έχεις μαντέψει ήδη, δοκίμασε ξανά!\n")
		else:
			print ("Το κράτος που έδωσες δεν είναι σωστό, δοκίμασε ξανά!\n")

#Η συνάρτηση τυπώνει όλες τις σωστές απαντήσεις
#Ασχέτως της προόδου του χρήστη			
def view_all_countries():
	print ("\nΠλήρης λίστα\nΚράτος - Πρωτεύουσα")
	#Εκτύπωση όλων των σωστών απαντήσεων
	for k in eu_all.keys():
		print(k,"-",eu_all[k])

#Η συνάρτηση ελέχγει για τυχόν αποθηκευμένα παιχνίδια
#και ενημερώνει αντίστοιχα τον χρήστη για τις ενέργειες που μπορεί να κάνει
#Επιστρέφει είτε το αποθηκευμένο παιχνίδι είτε False αν δεν βρεθεί
#ή ο χρήστης θέλει να ξεκινήσει το παιχνίδι από την αρχή
def load_game():
	#Αν υπάρχει ήδη αποθηκευμένο παιχνίδι
	if os.path.exists("saved.game"):
		print("Βρέθηκε αποθηκευμένη προσπάθειά σου.")
		
		#Αμυντικός προγραμματισμός
		flag = 0
		while flag == 0:
			cont = input("Θες να την συνεχίσεις (1 = Ναι, 2 = Όχι);")
			if cont == "1" or cont == "2":
				flag = 1
		
		#Αν ο χρήστης θέλει να συνεχίσει το προηγούμενο παιχνίδι
		#Το φορτώνουμε από το pickle
		if cont == "1":
			#Άνοιγμα του αρχείου που περιέχει το αποθηκευμένο
			#παιχνίδι ως μόνο για ανάγνωση
			f = open('saved.game','rb')
			#Φόρτωση του λεξικού από την προηγούμενη φορά
			eu_load = pickle.load(f)
			f.close()
			print ("Επιτυχής φόρτωση προηγούμενης προσπάθειας")
			print ("Κράτη που απομένουν να βρεις:",len(eu_load))
			return eu_load
		#Διαφορετικά, διαγράφουμε το αποθηκευμένο παιχνίδι
		#και ο χρήστης ξεκινά ένα νέο από το μηδέν
		else:
			print ("Το αποθηκευμένο παιχνίδι έχει διαγραφεί. Ξεκινάς από την αρχή!")
			os.remove("saved.game")
			return False
	else:
		return False

#Η συνάρτηση δέχεται ως όρισμα την τρέχουσα πρόοδο του χρήστη
#και την αποθηκεύει στον δίσκο ως pickle
def save_game(current_eu):
	f = open('saved.game','wb')
	pickle.dump(current_eu, f)
	f.close()
	print("Η πρόοδος του παιχνιδιού αποθηκεύτηκε.")
	print("Σας περιμένουμε πάλι σύντομα!")

#Η συνάρτηση δέχεται ως όρισμα το όνομα μιας χώρας καθώς
#και τον αριθμό των πόλεων που θέλουμε να εμφανίσουμε για τη συγκεκριμένη χώρα
def load_cities_csv(user_country,num_cities):
	#Δημιουργία λεξικού που περιλαμβάνει κάθε χώρα της ΕΕ
	#και τον αντίστοιχο κωδικό της με δύο γράμματα (ISO 3166-1 alpha-2)
	#ώστε να αντλήσουμε την πληροφορορία από το CSV
	eu_iso ={"Αυστρία" : "AT",
	"Βέλγιο" : "BE",
	"Βουλγαρία" : "BG",
	"Κροατία" : "HR",
	"Κύπρος" : "CY",
	"Τσεχία" : "CZ",
	"Δανία" : "DK",
	"Εσθονία" : "EE",
	"Φινλανδία" : "FI",
	"Γαλλία" : "FR",
	"Γερμανία" : "DE",
	"Ελλάδα" : "GR",
	"Ουγγαρία" : "HU",
	"Ιρλανδία" : "IE",
	"Ιταλία" : "IT",
	"Λετονία" : "LV",
	"Λιθουανία" : "LT",
	"Λουξεμβούργο" : "LU",
	"Μάλτα" : "MT",
	"Ολλανδία" : "NL",
	"Πολωνία" : "PL",
	"Πορτογαλία" : "PT",
	"Ρουμανία" : "RO",
	"Σλοβακία" : "SK",
	"Σλοβενία" : "SI",
	"Ισπανία" : "ES",
	"Σουηδία" : "SE"}

	if os.path.exists('worldcities.csv'):
		#Ανάγνωση του csv αρχείου ως UTF-8
		worldcities = open('worldcities.csv', 'r', encoding='utf8')
		lines = worldcities.readlines()
	else:
		print("Το αρχείο με τα δεδομένα των πόλεων δεν βρέθηκε!")
		return
	
	print("Πόλεις του συγκεκριμένου κράτους (πέραν της πρωτεύουσας)")
		
	i = 0
	for line in lines:
    
		#Split με βάση το , των γραμμών ώστε να λάβουμε τις στήλες
		cols = line.split(",")
	
		#Λαμβάνουμε τις στήλες που μας αφορούν
		country = cols[5].replace("\"","")
		city = cols[1].replace("\"","")
		is_capital = cols[8].replace("\"","")
		
		#Εμφάνιση πόλης για τη χώρα που μας ζητήθηκε
		if country == eu_iso[user_country] and is_capital != 'primary':
			i += 1
			print (city)
		
		#Αν έχουμε εμφανίσει ήδη των αριθμό των πόλεων που μας ζητήθηκε
		#τερματίζουμε το loop
		if i == num_cities:
			break

#H συνάρτηση εμφανίζει στον χρήστη την τρέχουσα πρόοδο του
#δηλαδή τις χώρες που έχει βρει ήδη
def view_progress():
	#Δημιουργία κενής λίστας με την πρόοδο του χρήστη
	progress = []
	
	#Στην συνέχεια, ελέγχουμε ποιες χώρες του λεξικού eu_all δεν υπάρχουν στο eu
	#Αυτές που δεν υπάρχουν, έχουν γίνει pop, άρα τις έχει βρει ο χρήστης
	for c in eu_all:
		#Αν η get δε βρει τη χώρα, θα μας επιστρέψει μηδέν
		check = eu.get(c,0)
		if check == 0:
			progress.append(c)
	
	if len(progress) == 0:
		print("Δεν έχεις βρει κάποια χώρα μέχρι στιγμής!")
	else:
		print("Οι χώρες που έχεις βρει:")
		for f in progress:
			print(f)
	

############################
#Έναρξη κυρίως προγράμματος
############################

#Εκτύπωση εισαγωγικού κειμένου
intro()

#Έλεχγος για αποθηκευμένο παιχνίδι
loaded_eu = load_game()
#Αν φορτώθηκε παιχνίδι από τον δίσκο, το λεξικό eu
#θα πρέπει να λάβει τις τιμές του λεξικού που είχε αποθηκευτεί
if loaded_eu != False:
	eu = loaded_eu.copy()

#Αρχικοποιούμε την μεταβλητή option σε 0
#ώστε να τρέξει τουλάχιστον μία φορά η συνάρτηση menu()
option = 0
while (option == 0):
	
	#Ο χρήστης έχει βρει όλες τις απαντήσεις
	if len(eu) == 0:
		print ("Μπράβο! Μάντεψες όλα τα κράτη! Τέλος παιχνιδιού\n")
		break
		
	#Αν ο χρήστης δεν έχει βρει όλες τις απαντήσεις
	#Καλούμε το menu
	if option == 0:
		option = menu()
	
	#Αν το menu επέστρεψε στο option 1 σημαίνει ότι ο χρήστης
	#ζήτησε να δει την πρόοδο του
	if option == 1:
		view_progress()
		option = 0
			
	#Αν το menu επέστρεψε στο option 2 σημαίνει ότι ο χρήστης
	#ζήτησε αποθήκευση και έξοδο, χωρίς να δεις τις απαντήσεις
	elif option == 2:
		save_game(eu)
		
	#Αν το menu επέστρεψε στο option 3, σημαίνει ότι ο χρήστης
	#ζήτησε ρητά την έξοδο από το παιχνίδι
	elif option == 3:
		view_all_countries()
		
	else:
		#Αν ο χρήστης δε ζητήσει κάτι από τα παραπάνω, 
		#προχωράμε στον έλεγχο της εισόδου του
		check_answer(option)
		option = 0
